<?xml version="1.0" encoding="UTF-8" ?>
<snippets>
<code label="Reads Clipped">
record.getReadUnmappedFlag()==false &amp;&amp; (
	record.getCigarString().contains("S") ||
	record.getCigarString().contains("H")
	);
</code>

<code label="Reads Length between 10 and 50">
record.getReadLength()&gt;10 &amp;&amp; record.getReadLength()&lt;50
</code>

<code label="Read string contains EcoRI">
record.getReadString().contains("GAATTC");
</code>

<code label="Read in Lane 3">
/** assume read name looks like 'HWI-BRUNOP16X_0001:3:63:18606:91538' */
var tokens=record.getReadName().split(/\:/);
tokens.length>2 &amp;&amp; tokens[1].equals("3");
</code>
<code label="Disjoint Chromosomes">
record.getReadPairedFlag() &amp;&amp; !record.getReadUnmappedFlag() &amp;&amp; !record.getMateUnmappedFlag()  &amp;&amp; !record.getReferenceName().equals(record.getMateReferenceName());
</code>

<code scope="bioalcidae" label="Count Reads/Chromosomes"><![CDATA[
var chrom2count={};
var n=0;
while(iter.hasNext()) {
 var item= iter.next();
 if(item.getReadUnmappedFlag()) continue;
 var contig = item.getContig();
 if( ! ( contig in chrom2count ) ) {
   chrom2count[contig]=1;
  } else  {
   chrom2count[contig]++;
  }
}

for(var contig in  chrom2count)
	{
	out.println(contig+"\t"+chrom2count[contig]);
	}
]]></code>


<code scope="bioalcidae" label="Convert to BED">while(iter.hasNext()) {
 var item= iter.next();
 if(item.getReadUnmappedFlag()) continue;
 out.println(item.getContig()+"\t"+(item.getStart()-1)+"\t"+item.getEnd());
}</code>



</snippets>
